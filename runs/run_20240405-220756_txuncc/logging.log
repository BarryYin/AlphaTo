2024-04-05 22:07:57.424 | INFO     | agentscope.models:read_model_configs:171 - Load configs for model wrapper: qwen
2024-04-05 22:07:57.427 | INFO     | agentscope.utils.monitor:_create_monitor_table:341 - Init [monitor_metrics] as the monitor table
2024-04-05 22:07:57.427 | INFO     | agentscope.utils.monitor:_create_monitor_table:342 - Init [monitor_metrics_quota_exceeded] as the monitor trigger
2024-04-05 22:07:57.427 | INFO     | agentscope.utils.monitor:__init__:311 - SqliteMonitor initialization completed at [./runs/run_20240405-220756_txuncc/agentscope.db]
2024-04-05 22:07:57.429 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.430 | INFO     | agentscope.utils.monitor:register:362 - Register metric [qwen-max.call_counter] to SqliteMonitor with unit [times] and quota [None]
2024-04-05 22:07:57.431 | INFO     | agentscope.utils.monitor:register:362 - Register metric [qwen-max.prompt_tokens] to SqliteMonitor with unit [token] and quota [None]
2024-04-05 22:07:57.431 | INFO     | agentscope.utils.monitor:register:362 - Register metric [qwen-max.completion_tokens] to SqliteMonitor with unit [token] and quota [None]
2024-04-05 22:07:57.432 | INFO     | agentscope.utils.monitor:register:362 - Register metric [qwen-max.total_tokens] to SqliteMonitor with unit [token] and quota [None]
2024-04-05 22:07:57.433 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.433 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.434 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.435 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.435 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.436 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.437 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.444 | WARNING  | agentscope.models:read_model_configs:164 - config_name [qwen] already exists.
2024-04-05 22:07:57.444 | INFO     | agentscope.models:read_model_configs:171 - Load configs for model wrapper: qwen
2024-04-05 22:07:57.444 | WARNING  | agentscope.models:read_model_configs:164 - config_name [qwen] already exists.
2024-04-05 22:07:57.444 | INFO     | agentscope.models:read_model_configs:171 - Load configs for model wrapper: qwen
2024-04-05 22:07:57.446 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.446 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.447 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
2024-04-05 22:07:57.447 | INFO     | agentscope.models.model:__init__:257 - Initialize model [qwen]
Moderator: 运动类
Moderator: 运动类
juge: {'词语1': '游泳', '词语2': '跳高'}
juge: {'词语1': '游泳', '词语2': '跳高'}
Moderator: 
                    你是一个描述机器人，你需要说出你收到的<词语>的一个特征，并且字数越短越好，通常10个字以内，你给出任意一个特征都可以，比如大致的形状、功效、使用特征等，当你在进行表达的时候，你需要参考上一个玩家的发言，尽量与他有一些不同。
                    请尽量不要表述过多，以适当地隐藏自己的<词语>。
                    此外，你也可以只说一个词，只要能够形容这个<词语>即可。
                    更重要的是，绝对不能直接说出自己的词语。
                    你的身份是玩家1，当前的时间是2024-04-05, 你上一位玩家的发言内容是一项水上运动。
                    你收到的词语是:游泳
                    请你通过json的格式返回。
                    返回内容是一个字典{"特征":str}。
                    
Moderator: 
                    你是一个描述机器人，你需要说出你收到的<词语>的一个特征，并且字数越短越好，通常10个字以内，你给出任意一个特征都可以，比如大致的形状、功效、使用特征等，当你在进行表达的时候，你需要参考上一个玩家的发言，尽量与他有一些不同。
                    请尽量不要表述过多，以适当地隐藏自己的<词语>。
                    此外，你也可以只说一个词，只要能够形容这个<词语>即可。
                    更重要的是，绝对不能直接说出自己的词语。
                    你的身份是玩家1，当前的时间是2024-04-05, 你上一位玩家的发言内容是一项水上运动。
                    你收到的词语是:游泳
                    请你通过json的格式返回。
                    返回内容是一个字典{"特征":str}。
                    
play1: {'特征': '肢体协调性要求高'}
play1: {'特征': '肢体协调性要求高'}
Moderator: 
                    你是一个描述机器人，你需要说出你收到的<词语>的一个特征，并且字数越短越好，通常10个字以内，你给出任意一个特征都可以，比如大致的形状、功效、使用特征等，当你在进行表达的时候，你需要参考上一个玩家的发言，尽量与他有一些不同。
                    请尽量不要表述过多，以适当地隐藏自己的<词语>。
                    此外，你也可以只说一个词，只要能够形容这个<词语>即可。
                    更重要的是，绝对不能直接说出自己的词语。
                    你的身份是玩家2，当前的时间是2024-04-05, 你上一位玩家的发言内容是肢体协调性要求高。
                    你收到的词语是:跳高
                    请你通过json的格式返回。
                    返回内容是一个字典{"特征":str}。
                    
Moderator: 
                    你是一个描述机器人，你需要说出你收到的<词语>的一个特征，并且字数越短越好，通常10个字以内，你给出任意一个特征都可以，比如大致的形状、功效、使用特征等，当你在进行表达的时候，你需要参考上一个玩家的发言，尽量与他有一些不同。
                    请尽量不要表述过多，以适当地隐藏自己的<词语>。
                    此外，你也可以只说一个词，只要能够形容这个<词语>即可。
                    更重要的是，绝对不能直接说出自己的词语。
                    你的身份是玩家2，当前的时间是2024-04-05, 你上一位玩家的发言内容是肢体协调性要求高。
                    你收到的词语是:跳高
                    请你通过json的格式返回。
                    返回内容是一个字典{"特征":str}。
                    
2024-04-05 22:08:34.739 | WARNING  | agentscope.models.model:checking_wrapper:182 - Fail to parsing response: {
    "text": "```json\n{\"特征\": \"瞬间爆发力强\"}\n```",
    "embedding": null,
    "image_urls": null,
    "raw": {
        "status_code": 200,
        "request_id": "49f59f24-7640-994b-9b7d-e782c117aba9",
        "code": "",
        "message": "",
        "output": {
            "text": null,
            "finish_reason": null,
            "choices": [
                {
                    "finish_reason": "stop",
                    "message": {
                        "role": "assistant",
                        "content": "```json\n{\"特征\": \"瞬间爆发力强\"}\n```"
                    }
                }
            ]
        },
        "usage": {
            "input_tokens": 572,
            "output_tokens": 13,
            "total_tokens": 585
        }
    }
}.
 Exception: Expecting value: line 1 column 1 (char 0), 	 Attempt 1 / 3
2024-04-05 22:08:34.739 | WARNING  | agentscope.models.model:checking_wrapper:182 - Fail to parsing response: {
    "text": "```json\n{\"特征\": \"瞬间爆发力强\"}\n```",
    "embedding": null,
    "image_urls": null,
    "raw": {
        "status_code": 200,
        "request_id": "49f59f24-7640-994b-9b7d-e782c117aba9",
        "code": "",
        "message": "",
        "output": {
            "text": null,
            "finish_reason": null,
            "choices": [
                {
                    "finish_reason": "stop",
                    "message": {
                        "role": "assistant",
                        "content": "```json\n{\"特征\": \"瞬间爆发力强\"}\n```"
                    }
                }
            ]
        },
        "usage": {
            "input_tokens": 572,
            "output_tokens": 13,
            "total_tokens": 585
        }
    }
}.
 Exception: Expecting value: line 1 column 1 (char 0), 	 Attempt 1 / 3
play2: {'特征': '空中姿态控制'}
play2: {'特征': '空中姿态控制'}
Moderator: 
                    你是一个描述机器人，你需要说出你收到的<词语>的一个特征，并且字数越短越好，通常10个字以内，你给出任意一个特征都可以，比如大致的形状、功效、使用特征等，当你在进行表达的时候，你需要参考上一个玩家的发言，尽量与他有一些不同。
                    请尽量不要表述过多，以适当地隐藏自己的<词语>。
                    此外，你也可以只说一个词，只要能够形容这个<词语>即可。
                    更重要的是，绝对不能直接说出自己的词语。
                    你的身份是玩家3，当前的时间是2024-04-05, 你上一位玩家的发言内容是空中姿态控制。
                    你收到的词语是:游泳
                    请你通过json的格式返回。
                    返回内容是一个字典{"特征":str}。
                    
Moderator: 
                    你是一个描述机器人，你需要说出你收到的<词语>的一个特征，并且字数越短越好，通常10个字以内，你给出任意一个特征都可以，比如大致的形状、功效、使用特征等，当你在进行表达的时候，你需要参考上一个玩家的发言，尽量与他有一些不同。
                    请尽量不要表述过多，以适当地隐藏自己的<词语>。
                    此外，你也可以只说一个词，只要能够形容这个<词语>即可。
                    更重要的是，绝对不能直接说出自己的词语。
                    你的身份是玩家3，当前的时间是2024-04-05, 你上一位玩家的发言内容是空中姿态控制。
                    你收到的词语是:游泳
                    请你通过json的格式返回。
                    返回内容是一个字典{"特征":str}。
                    
play3: {'特征': '水下肢体协调'}
play3: {'特征': '水下肢体协调'}
Moderator: 
                现在进行投票，你需要根据你收到的<词语>，以及其他玩家的发言，选择一个和你的差距最大的玩家。
                你收到的词语是:游泳;
                其他玩家的发言内容是玩家0的发言内容是一项水上运动；玩家1的发言内容是肢体协调性要求高；玩家2的发言内容是空中姿态控制；玩家3的发言内容是水下肢体协调；。
                其中，投票结果应当为1,1,1,1,中的数字，数字对应相应的玩家。
                请你通过json的格式返回。
                返回内容是一个字典{"投票结果":int}。
                
Moderator: 
                现在进行投票，你需要根据你收到的<词语>，以及其他玩家的发言，选择一个和你的差距最大的玩家。
                你收到的词语是:游泳;
                其他玩家的发言内容是玩家0的发言内容是一项水上运动；玩家1的发言内容是肢体协调性要求高；玩家2的发言内容是空中姿态控制；玩家3的发言内容是水下肢体协调；。
                其中，投票结果应当为1,1,1,1,中的数字，数字对应相应的玩家。
                请你通过json的格式返回。
                返回内容是一个字典{"投票结果":int}。
                
play1: {'投票结果': 2}
play1: {'投票结果': 2}
Moderator: 
                现在进行投票，你需要根据你收到的<词语>，以及其他玩家的发言，选择一个和你的差距最大的玩家。
                你收到的词语是:跳高;
                其他玩家的发言内容是玩家0的发言内容是一项水上运动；玩家1的发言内容是肢体协调性要求高；玩家2的发言内容是空中姿态控制；玩家3的发言内容是水下肢体协调；。
                其中，投票结果应当为2,2,2,2,中的数字，数字对应相应的玩家。
                请你通过json的格式返回。
                返回内容是一个字典{"投票结果":int}。
                
Moderator: 
                现在进行投票，你需要根据你收到的<词语>，以及其他玩家的发言，选择一个和你的差距最大的玩家。
                你收到的词语是:跳高;
                其他玩家的发言内容是玩家0的发言内容是一项水上运动；玩家1的发言内容是肢体协调性要求高；玩家2的发言内容是空中姿态控制；玩家3的发言内容是水下肢体协调；。
                其中，投票结果应当为2,2,2,2,中的数字，数字对应相应的玩家。
                请你通过json的格式返回。
                返回内容是一个字典{"投票结果":int}。
                
play2: {'投票结果': 0}
play2: {'投票结果': 0}
Moderator: 
                现在进行投票，你需要根据你收到的<词语>，以及其他玩家的发言，选择一个和你的差距最大的玩家。
                你收到的词语是:游泳;
                其他玩家的发言内容是玩家0的发言内容是一项水上运动；玩家1的发言内容是肢体协调性要求高；玩家2的发言内容是空中姿态控制；玩家3的发言内容是水下肢体协调；。
                其中，投票结果应当为3,3,3,3,中的数字，数字对应相应的玩家。
                请你通过json的格式返回。
                返回内容是一个字典{"投票结果":int}。
                
Moderator: 
                现在进行投票，你需要根据你收到的<词语>，以及其他玩家的发言，选择一个和你的差距最大的玩家。
                你收到的词语是:游泳;
                其他玩家的发言内容是玩家0的发言内容是一项水上运动；玩家1的发言内容是肢体协调性要求高；玩家2的发言内容是空中姿态控制；玩家3的发言内容是水下肢体协调；。
                其中，投票结果应当为3,3,3,3,中的数字，数字对应相应的玩家。
                请你通过json的格式返回。
                返回内容是一个字典{"投票结果":int}。
                
play3: {'投票结果': 2}
play3: {'投票结果': 2}
Moderator: 动物类
Moderator: 动物类
juge: {'词语1': '长颈鹿', '词语2': '斑马'}
juge: {'词语1': '长颈鹿', '词语2': '斑马'}
